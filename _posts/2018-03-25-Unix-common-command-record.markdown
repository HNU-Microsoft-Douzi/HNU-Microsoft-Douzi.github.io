---
layout: post
data: 2018-03-25
title: "Unix操作系统常用命令记录"
subtitle: "Unix common command record!"
author: "Zxy"
tags:
    - Unix
    - AIX
---
## 常用命令
<p><b>mesg n</b></p>
<p>用来屏蔽他人wall出的消息。</p>

<p><b>pwd</b></p>
<p>用来查看当前目录</p>

<p><b>ls -ld /home/sxxxxx</b></p>
<p>用来查看当前目录有多长，一般是一个数字。</p>

<p><b>ls -l</b></p>
<p>列出目录下的文件的详细信息。</p>

<p><b>ls -d</b></p>
<p>列出某个目录文件的信息，而不是该目录下的文件。</p>

<p><b>touch file</b></p>
<p>利用touch创建一个名为file的文件</p>

<p><b>ls -l mydir</b></p>
<p>用来显示mydir的内容和文件的大小</p>

<p><b>li -li</b></p>
<p>比起li -l在第一列多显示一列i-node数，该数因系统不同而不同。</p>

<p><b>istat 目录名</b></p>
<p>查看当前目录中的`i-node`信息。并且`Last Accessed`信息将在查看的任何时候进行更新。</p>

**rm -r**

迭代删除一个目录及其下的所有内容，而<span style="color:red"><b>rmdir 目录名</b></span>能删除的只有空目录。

**cat 文件名**

**cat**连接文件，命令连接文件并打印到标准输出设备上，cat经常用来显示文件的内容,若只有一个参数，则默认连接到当前屏幕。

**cat > 文件名**

重定向一个文件，并且对文件进行写入操作，按住<span style="color:gold">`Ctrl+d`</span>退出编辑。

> 重定向的意义就是将原本要输出到屏幕上的文件通过重定向输出到文件中，而tee命令的作用则是读取标准输入，把这些内容同时输出到标准输出和（多个）文件中。

**cat >> filename1 filename2**

将filename1追加到filename2后面

**pg 文件名**

分页显示指定文件的内容。在显示一页文件时，最后一行将显示等待用。

**more 文件名**

按照`vim`的格式将文件打开。

**cp filename 路径**

将文件复制到路径下。

**mv filename1 filename2**

将filename1移动到filename2的位置。

**ln**

`ln`是linux中又一个非常重要命令，请大家一定要熟悉。它的功能是为某一个文件在另外一个位置建立一个同步的链接，这个命令最常用的参数是-s，具体用法是：`ln –s 源文件 目标文件`。 当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在其它的目录下用`ln`命令链接（`link`）它就可以，不必重复的占用磁盘空间。

**ln -s**

用来建立软链接，软链接是对源文件的间接引用，最大的区别是硬链接的两个文件相当于引用，有着共同的i-node，软链接是间接的引用，两者i-node不同，实际上是两个不同的文件，硬链接只能在同一个分区，软链接可以跨目录，也可以跨文件系统。

**ls -l 目录名**

要想查看一个目录的权限信息，必须有对其内文件的可执行权限，不然得到的结果就是<span style="color:red">Permission denied</span>

当你执行一个文件时，如果对该文件ls -l没有x（可执行权限）的话，那么显示的就是<span style="color:yellow">**not found**</span>

同样，当你想要rm一个文件时，必须要具有其x和w的权限，否则会不被允许。

**ls **

列出当前目录下的所有目录名和其下的所有可读（非隐藏）文件。

**ls a***

列出当前目录下以<span style="color:red">a</span>开头的所有目录名和其下的所有可读（非隐藏）文件。

**$ ls [abcd]***

列出所有文件名以a,b,c,d字母开头的文件。

**$ls[!c-t]* | pg**

列出所有除去文件名开头是c 到 t 的文件。结果会很长。

**file 文件名**

查看当前文件的类型。

**管道文件**

进程间通过管道文件进行通信,逻辑符号或 | 表示管道。

**df -g**

查看当前系统的分区卷及存储位置。

**wc -w(同ls | wc -w)**

计算当前目录中含有的文件个数。

**wc -l -w -c**

统计文件有多少行，有多少单词，有多少字符？

**创建一个带-的文件**

`touch -- -文件名`

**创建一个带+的文件**

`touch -- +文件`

**删除一个带-的文件**

`rm -- +文件名`

**cd -**

回到上一次的操作目录。

**cd ~**

回到主目录。

**cd**

回到用户的主目录。

**mkdir -m 目录名**

创建一个只能自己访问的目录。

**mkdir -p 目录名**

创建多重目录。

**rmdir -p 目录名**

删除多重目录。

**touch**

用来更新文件的访问和修改时间，如果文件不存在，则创建空文件。

**uname -r**

查看当前内核的版本

**lsb_release -a**

查看当前LSB的版本和distribution的版本


**baasename /etc/sysconfig/network**

network

取得最后的文件名。

### 改变文件属性与权限的命令
**chgrp**

改变文件所属用户组

**chown**

改变文件所有者

**chmod**

改变文件的权限。

**od**

查看非纯文本文件的内容。有时利用cat、more、vim、vi...得到某些类似乱码的数据，这时我们就可以用od命令进行读取。

利用该命令，可以将数据文件或者是二进制文件的内容数据读出来。不过是以十六进制的数值来显示，但是，我们可以通过使用-t c的参数来帮助二进制字符以ASCII类型的字符来显示。

**umask**

设置文件权限掩码，初始化创建目录时默认为777-umask，而创建文件时，默认为666-umask，所以可以通过改变umask的值来默认改变每次创建目录时的权限，umask的值可以在.profile中配置，会覆盖全局。

`umask -s`以符号类型的方式来创建文件。

**chatter**

设置文件的隐藏属性

**set/unset**

`set`	用以显示所有的变量

`lunch=pizza`	设置变量的值

`unset lunch`	将lunch变量的值删除

**echo**

在屏幕上显示信息

### 系统各个文件内容

- usr:存储Unix所有的程序文件
- etc:存储Unix系统的配置文件
- dev:存储Unix所有的配置文件
- sbin:系统启动所必需的二进制文件
- home:用户的主目录
- var:可变文件
- tmp:所有用户都可视的文件

### Unix小贴士
Windows不区分大小写，Linux要区分大小写。

文件名最多为255个字符。

若文件大小有两个数字，第一个为文件类型，第二个为实例序号。

"."表示当前目录，".."表示上一目录。

创建带空格的文件时用引号括起来。

`inode`相当于文件/目录的身份编号，唯一，若是两个文件a,b都具有相同的`inode`，说明它们是同一个文件，但是用的是硬链接，若是删除了其中之一，那么另一个不会被删除，该文件的连接数变为1，只有删除了另外的一个文件，该文件才能算是被删除了。

对一个文件要删除的话，只需对该文件的存储目录有可写w的权限，就可以实现删除操作。