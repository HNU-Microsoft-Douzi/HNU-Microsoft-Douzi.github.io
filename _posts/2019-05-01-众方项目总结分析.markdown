---
title: "众方项目总结分析"
subtitle: "The analysis of the ZhongFang"
layout: post
data: 2019-05-01
author: "Zxy"
tags:
    - java
---

3月23日左右开始着手项目的了解，从项目接收到现在差不多40天左右的时间，过的不是很久，但是经历颇多，遇到问题颇多，拼搏颇多，感慨颇多。

这次的商业项目让我感受到了很多之前做个人项目没有感受到的东西，我不得不承认，虽然这一个月非常疲惫，但承载着巨大的压力下，我变强了很多，这种能力上的提升并不单单是技能上的，我不能说自己这一个月技能有多大的进步，因为项目的原因耽搁了看书的时间，但是我知道作为一个开发者，我对实际开发的领悟和掌控力要远远超过一个月之前。

和Boss的交流过程也让我从他们身边学到很多产品的理念，交流的思想，产品分析的过程，问题解决的策略和措施，这是比之钱或者纯粹的技能更加珍贵的多的东西。

我开始注重思想的重要性，逐渐把重心放在思考上...

## 项目描述

这个项目非常特殊，因为它并不是一个纯粹的软件应用，而是一个需要与物联设备交互的控制台，物联设备是一个重达30kg左右的行走机器人，是Boss他们自己搭建的，设备内部分为几个模块：上位机+导航芯片，下位机+探测传感器+电池，上层存储芯片及扫描仪。

遗憾的是，产品理念涉及到相关的商业模式，我不能细说，控制台交互代码涉及到商业机密，我也不能开源。

## 项目职能

这个项目一开始是有官方的一个样本的，也就是说，并不是完全从零开始做，接手之前，一直是黑马讲师炎哥负责的，我接手的时候，从现在看来，差不多是完成了40%左右的程度。

炎哥这边是把项目的架构基本都做好了，算是建楼的时候有了一个地基，我的任务，就是在这个地基上，和工程师（两位Boss）交流，把这个楼给它盖出来。

## 项目流程

### 了解过程

用了差不多3天到一周的时间从代码细节和产品理念的方向上理解了整个产品的一个架构思路和设计理念。

第一个感觉是有点特殊，这个项目的架构没有用任何当下流向的MVC、MVP和MVVM的架构思想，而是采用一层指令交互层负责上下的呈递，最上层为应用层直接管控，最下层是封装的API构成的robot代理。

相当于是应用层+指令层+代理层，有自定义的同步线程池辅助指令池实现对代理层的控制。

整个指令池的处理过程非常复杂，从代理层拿到机器扫描到的环境数据以后要结合强大的自定义View将试图呈现在控制台上层。

由上层衔接界面向用户展示当前机器的运行状况。

### 第一个版本——单机版

我一个月以前根本不知道实际版本会和原版本差那么多，最早我本以为炎哥完成了已经有80%的内容，不过后序的几次版本变更也确实给我带来了不小的压力，幸运的是，这些压力最终都变成了我前行的动力。

最早期的版本是个简单的单机版，炎哥给我的时候是通过手机和机器直连的，当然肯定还是通过网络，现在想想最早期的版本和官方demo的差别不是很大，过程中第一个任务是附加功能，在已有版本上增进巡航功能。

单机版加上进一步熟悉的耗时：2周。

### 第二个版本——单机客户端版

单机客户端版本是在原单机版的基础下，又增加了一个Android板，将手机命令下发到Android板上，由Android板执行然后发给下位机去执行，这样呈递是因为指令必须持续运行的原因，而手机所处的生态是不允许它持续运行的。

其实这一部分炎哥之前是写过的，但是炎哥写过的版本是让手机作为客户端，而让Android板作为服务端，当手机开启后，让手机发送广播由Android板来接收，这样的逻辑实现实际上是有问题的，Boss提出了新的要求，让我逆转双端逻辑，也是我第一次实施局域网内网络编程实战。

我遇到了很多很多很多麻烦的问题，但我最终还是逆转了双端的逻辑。

Boss再次开展交流会，继续提出产品的思路和设计的理念，我重新调整项目代码，按照Boss给出的方针来实现单机客户端版本。

但情况并不是很理想，因为双端交互出现了很大的不稳定情况，猜测原因可能是多方面的，一方面可能是频繁的数据发送导致了网络的拥塞情况，甚至猜测当前网络情况会与android板接入电流有关系。

网络不稳，和Boss交流，Boss重整思路，变更产品设计思路，进入到第三个版本中。

第2个版本耗时最长，大概在两个周左右。

### 第三个版本——增强单机版

为了提高稳定性和开发效率，我的思路也开始逐渐改变，不再真毒与全局设计，而是针对于模块化，我将完整版分解成了两个版本，一个是单机版，另一个是单机+android板的完整版。

我将两个版本的任务内容进行了划分，发现单机版占据了完整版的80%的内容，与Boss开始交流，摒弃之前所有思路，让思维超脱出来，回到起点，探讨后最终确定了完整单机版的产品思路，全力着手单机版的开发。

4.29单机版完成，稳定性出乎意料，之前一个月做的工作没有白费，对产品的认识和对代码细节的掌控让我对整个项目的功能开发几乎了如指掌。

单机版开发耗时：2天！

### 第四个版本——完整版

4.29日早上单机版验收完毕，同步Boss下达指令，希望这边尽快出完整版，按照之前的内容估计，完整版相当于在增强单机版上实现与Android板的交互，两者的开发我在第二个版本中已经完成，在第四个版本中进行测试和验证，在代码细节上进行处理，同步规范并调整代码结构，删除冗余代码，构建测试代码，得到了正确的测试结果。

在4.30日的晚上，完成了最终版的开发。

完整版开发耗时:1天！

## 项目感悟

实际项目的开发中我第一次体会到思维碰撞的感觉，体会到产品思维的重要性和能力，也看清了部分未来走向的路，不单单是作为一个开发者，更重要的是作为一个解决问题的人。

我其实特别感谢我的两个Boss，能和他们一起共事，我一直都感觉特别荣幸，项目开发的过程中进行的思想交流，是我体验最宝贵的东西。

下面分点来说我得到了什么，下次应该怎么做才能变得更好：

- 真正的实体项目和我平时写的个人项目而言，最大的差别，是个人项目重在实践，重在功能的实现，而实体项目，重在产品交互，重在用户体验，重中之重的是产品稳定性！！！
- 注重产品的设计思维，好的产品理念，不单单注重的是用户体验，甚至还有开发难度和细节，甚至可以一步到位，不用多次改进，大大缩短开发的流程，降低开发的成本。
- 任务的执行不单单要做到100%，而是要做到120%，要用思维去站在产品的理念上开发产品，而不单单是一个开发者。
- 要注重思维的交流过程，一定要突破思维的限制，只有比用户想的更多，从用户身上出发，才能开发出贴合于用户的产品。
- 一定要跳出生活的舒适区，勇于让自己陷入困境，然后去打破困境，才能内心的束缚和局限，不断给予自己压力，才能在逆境中有所变化，安于现状，会让人心生倦怠，要去适应于压力，要主动去改变环境。
- 别因为任何事情给自己找借口，多做事，少说话，但并不意味着要降低口语表达的能力，要说有分量，有意义的话。
- 注重问题解决的思路、角度和方法，对所有问题解决的步骤做记录和分析，要成为能解决问题的人！
- 产品产品产品！！！要去微信验证自己的路，不走任何别人走过的路，要用自己的心，自己看到的未来去验证自己的道。